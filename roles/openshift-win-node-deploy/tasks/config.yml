---

#    - name: Pull the kubernetes node kubelet
#      win_shell: curl.exe -L -k https://dl.k8s.io/v1.11.3/kubernetes-node-windows-amd64.tar.gz -o C:\Windows\Temp\kubernetes.tar.gz
#      async: 3600
#      poll: 5

- name: Download the kubernetes node file
  win_get_url:
    url: https://dl.k8s.io/v1.11.3/kubernetes-node-windows-amd64.tar.gz
    dest: C:\Windows\Temp\kubernetes.tar.gz
    validate_certs: no
    follow_redirects: all

#    - name: Install PSCX
#      win_psmodule:
#        name: Pscx
#        allow_clobber: yes
#        state: present

#    - name: Unzip kubernetes tar
#      win_unzip:
#        src: C:\Windows\Temp\kubernetes.tar.gz
#        dest: C:\Windows\Temp
#        creates: C:\Windows\Temp\kubernetes.tar
#
#    - name: Unzip kubernetes
#      win_unzip:
#        src: C:\Windows\Temp\kubernetes.tar
#        dest: C:\Windows\Temp
#        creates: C:\Windows\Temp\kubernetes\node\bin

- name: Untar kubernetes
  win_shell: tar -xvzf c:\Windows\Temp\kubernetes.tar.gz -C \Windows\Temp

- name: Copy kubernetes bin directory
  win_copy:
    src: C:\Windows\Temp\kubernetes\node\bin
    dest: C:\
    remote_src: yes

#    - name: Move the kube to bin
#      win_shell: copy "C:\Windows\Temp\kubernetes\node\bin\*" C:\bin

- name: Ensure C:\k exists
  win_file:
    path: C:\k
    state: directory

- name: move the node files
  win_copy:
    src: generated-configs/{{ inventory_hostname }}.zip
    dest: c:\k\{{ inventory_hostname }}.zip
    force: yes

#    - name: Unzip the config files
#      win_shell: tar -xvzf /k/{{inventory_hostname}}.zip  -C \k\

- name: Unzip the config files
  win_unzip:
    src: c:\k\{{ inventory_hostname }}.zip
    dest: c:\k\

- name: Add the master cluster config file
  win_copy:
    src: generated-configs/node-{{ groups.masters | first }}/windows/
    dest: /k/
    force: yes

- name: Cleanup archive path
  win_file:
    path: c:\k\etc
    state: absent

- name: Setup client config
  win_copy:
    content: "{{ hostvars[groups.masters[0]].kube_config['content'] | b64decode }}"
    dest: /k/config
    force: yes

- name: Set kubeconfig
  win_shell: "[System.Environment]::SetEnvironmentVariable('KUBECONFIG', 'c:/k/config;c:/k/system-node-1.masters | first }}.kubeconfig', [System.EnvironmentVariableTarget]::Machine)"

- name: Set kubeconfig
  win_shell: "[System.Environment]::SetEnvironmentVariable('KUBECONFIG', 'c:/k/config;c:/k/system-node-{{ groups.masters | first }}.kubeconfig')"

